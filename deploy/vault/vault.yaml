apiVersion: vault.banzaicloud.com/v1alpha1
kind: Vault
metadata:
  name: vault
spec:
  size: 1
  image: vault:1.13.1

  # Specify the ServiceAccount where the Vault Pod and the Bank-Vaults configurer/unsealer is running
  serviceAccount: vault

  # Specify the Service's type where the Vault Service is exposed
  # serviceType: ClusterIP

  # Use local disk to store Vault file data, see config section.
  volumes:
    - name: vault-file
      persistentVolumeClaim:
        claimName: vault-file

  volumeMounts:
    - name: vault-file
      mountPath: /vault/file

  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    options:
      # The preFlightChecks flag enables unseal and root token storage tests
      # This is true by default
      preFlightChecks: true
      # The storeRootToken flag enables storing of root token in chosen storage
      # This is true by default
      storeRootToken: true
    kubernetes:
      secretNamespace: vault

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      file:
        path: /vault/file
    listener:
      tcp:
        address: "0.0.0.0:8200"
        tls_disable: true
    ui: true
    log_level: debug

  # See: https://bank-vaults.dev/docs/cli-tool/#example-external-vault-configuration
  # The repository also contains a lot examples in the test/deploy and operator/deploy directories.
  externalConfig:
    policies:
      - name: allow_secrets
        rules: path "secret/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
          }

    secrets:
      - path: secret
        type: kv
        description: General secrets
        options:
          version: 2

    auth:
      - type: kubernetes
        roles:
          # Allow access for every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: ["default"]
            bound_service_account_namespaces: ["default"]
            policies: ["allow_secrets"]
            ttl: 1h

          # Allow access for ESO
          - name: vault
            bound_service_account_names: ["external-secrets"]
            bound_service_account_namespaces: ["external-secrets"]
            policies: ["allow_secrets"]
            ttl: 1h

          # Allow access for the vault secrets webhook
          - name: vault-secrets-webhook
            bound_service_account_names: ["vault-secrets-webhook"]
            bound_service_account_namespaces: ["vault-system"]
            policies: ["allow_secrets"]
            ttl: 1h

          # Allow access for Vault
          - name: vault
            bound_service_account_names: ["vault"]
            bound_service_account_namespaces: ["vault"]
            policies: ["allow_secrets"]
            ttl: 1h

    # Allows writing some secrets to Vault (useful for development purposes).
    # See https://www.vaultproject.io/docs/secrets/kv/index.html for more information.
    startupSecrets:
      - type: kv
        path: secret/data/foo/bar
        data:
          data:
            hello: World

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault-file
spec:
  # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  # storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
